{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import axios from \"axios\";\nimport \"./css/styles.css\";\n\n\n// Використовуємо https://pokeapi.co/ та створимо сторінку перегляду покемонів\n\n\nconst BASE_URL = 'https://pokeapi.co/api/v2/pokemon/';\n\nconst container = document.querySelector(\".card-container\");\nconst form = document.querySelector(\".search-form\");\n\nform.addEventListener(\"submit\", onSearch);\n\nasync function fetchPokemon(pokemonName) {\n    const result = await axios(`${BASE_URL}${pokemonName}`);\n    return result.data;\n}\n\nasync function onSearch(event) {\n    event.preventDefault();\n    const searchQuery = event.currentTarget.elements.query.value;\n\n    if (!searchQuery.trim()) {\n        alert(\"Please enter a Pokémon name\");\n        return;\n    }\n    \n    try {\n        const data = await fetchPokemon(searchQuery)\n        console.log(data);\n\n        container.innerHTML = renderPokemonCard(data);\n    }\n    catch (error) {\n        if (error.response && error.response.status === 404) {\n            alert(\"Pokémon not found. Please check the name.\");\n        } else {\n            alert(\"Something went wrong. Try again later.\");\n        }\n    }\n\n    form.reset();\n}\n    \n// function renderPokemonCard({ name, weight, height, abilities, sprites\n// }) {\n//     const abilitiesList = abilities.map(({ ability }) =>\n//         `<li class=\"list-group-item\">${ability.name}></li>`).join(\"\");\n//     return `\n//     <div class=\"card\">\n//     <div class=\"card-img-top\">\n//     <img src=\"${sprites.front_default}\" alt=\"${name}\"/>\n//         </div>\n//     <div class=\"card-body\">\n//     <h3 class=\"title\">${name}</h3>\n//     <p class=\"card-text\">Weight: ${weight}</p>\n//     <p class=\"card-text\">Height: ${height}</p>\n//     <p class=\"card-text\"><h4>Abilities:</h4> <ul>${abilitiesList}</ul></p>\n//     </div>\n//     </div>`\n// }\n\n\n//  Щоб картка покемона виглядала як Bootstrap Card, давай оформимо її з урахуванням класів Bootstrap 5.\n\nfunction renderPokemonCard({ name, weight, height, abilities, sprites }) {\n    const abilitiesList = abilities\n      .map(({ ability }) => `<li class=\"list-group-item\">${ability.name}</li>`)\n      .join(\"\");\n  \n    return `\n      <div class=\"card mx-auto mt-4 shadow animate-in\" style=\"width: 22rem;\">\n        <img src=\"${sprites.front_default}\" class=\"card-img-top p-3\" alt=\"${name}\" />\n        <div class=\"card-body\">\n          <h5 class=\"card-title text-capitalize text-center\">${name}</h5>\n          <p class=\"card-text\"><strong>Weight:</strong> ${weight}</p>\n          <p class=\"card-text\"><strong>Height:</strong> ${height}</p>\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item active\">Abilities</li>\n          ${abilitiesList}\n        </ul>\n      </div>`;\n  }"],"names":["BASE_URL","container","form","onSearch","fetchPokemon","pokemonName","axios","event","searchQuery","data","renderPokemonCard","error","name","weight","height","abilities","sprites","abilitiesList","ability"],"mappings":"oFAOA,MAAMA,EAAW,qCAEXC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAO,SAAS,cAAc,cAAc,EAElDA,EAAK,iBAAiB,SAAUC,CAAQ,EAExC,eAAeC,EAAaC,EAAa,CAErC,OADe,MAAMC,EAAM,GAAGN,CAAQ,GAAGK,CAAW,EAAE,GACxC,IAClB,CAEA,eAAeF,EAASI,EAAO,CAC3BA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,cAAc,SAAS,MAAM,MAEvD,GAAI,CAACC,EAAY,OAAQ,CACrB,MAAM,6BAA6B,EACnC,MACH,CAED,GAAI,CACA,MAAMC,EAAO,MAAML,EAAaI,CAAW,EAC3C,QAAQ,IAAIC,CAAI,EAEhBR,EAAU,UAAYS,EAAkBD,CAAI,CAC/C,OACME,EAAO,CACNA,EAAM,UAAYA,EAAM,SAAS,SAAW,IAC5C,MAAM,2CAA2C,EAEjD,MAAM,wCAAwC,CAErD,CAEDT,EAAK,MAAK,CACd,CAuBA,SAASQ,EAAkB,CAAE,KAAAE,EAAM,OAAAC,EAAQ,OAAAC,EAAQ,UAAAC,EAAW,QAAAC,GAAW,CACrE,MAAMC,EAAgBF,EACnB,IAAI,CAAC,CAAE,QAAAG,KAAc,+BAA+BA,EAAQ,IAAI,OAAO,EACvE,KAAK,EAAE,EAEV,MAAO;AAAA;AAAA,oBAESF,EAAQ,aAAa,mCAAmCJ,CAAI;AAAA;AAAA,+DAEjBA,CAAI;AAAA,0DACTC,CAAM;AAAA,0DACNC,CAAM;AAAA;AAAA;AAAA;AAAA,YAIpDG,CAAa;AAAA;AAAA,aAGzB"}